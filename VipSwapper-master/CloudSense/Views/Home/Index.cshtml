@model CloudSense.Models.HomeIndexViewModel
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>CloudSense</h1>
    <p class="lead">We monitor your Azure infrastructure. You ... sleep well.</p>
    @if (!Request.IsAuthenticated)
    {
        @Html.ActionLink("Sign in and get started ...", "SignIn", "Account", routeValues: null, htmlAttributes: new { @class = "btn btn-primary btn-lg" })
    }
</div>

<div class="row">
    @if (Model != null)
    {
        <table class="table table-striped table-condensed table-hover">
            <tr>
                <td>
                    <h4>Azure Subscription</h4>
                </td>
                <td>
                    <h4>Monitored by CloudSense?</h4>
                </td>
            </tr>
            @foreach (KeyValuePair<string, CloudSense.Models.Subscription> entry in Model.UserSubscriptions)
            {
                var subscription = entry.Value as CloudSense.Models.Subscription;
                <tr>
                    <td>
                        @subscription.DisplayName
                        <br />
                        &nbsp;&nbsp;<small>Subscription Id: @subscription.Id</small>
                        <br />
                        &nbsp;&nbsp;<small>Organization Id: @subscription.OrganizationId</small>
                    </td>
                    <td>
                        @if (subscription.IsConnected)
                        {
                            <text>Yes. </text>
                            <br />
                            <small>&nbsp;&nbsp; Connected By: @subscription.ConnectedBy </small>
                            <small>&nbsp; Connected On: @subscription.ConnectedOn.ToShortDateString() </small>
                            if (Model.UserCanManageAccessForSubscriptions.Contains(@subscription.Id))
                            {

                                    @Html.ActionLink("Disconnect", "Disconnect", "Subscription", new
                                    {
                                        Id = @subscription.Id,
                                        OrganizationId = @subscription.OrganizationId,
                                        ServicePrincipalObjectId = Model.UserOrganizations[@subscription.OrganizationId].objectIdOfCloudSenseServicePrincipal
                                    },
                                    new { @class = "btn btn-danger btn-xs" })
                            }
                            if (@subscription.AzureAccessNeedsToBeRepaired)
                            {
                                <br/>
                                <small>&nbsp;&nbsp; Access in Azure needs to be repaired: </small>
                                    @Html.ActionLink("Repair", "RepairAccess", "Subscription", new
                                    {
                                        Id = @subscription.Id,
                                        OrganizationId = @subscription.OrganizationId,
                                        ServicePrincipalObjectId = Model.UserOrganizations[@subscription.OrganizationId].objectIdOfCloudSenseServicePrincipal
                                    },
                                    new { @class = "btn btn-info btn-xs" })
                            }
                        }
                        else
                        {
                            <text>No. </text>
                            if (Model.UserCanManageAccessForSubscriptions.Contains(@subscription.Id))
                            {
                                    @Html.ActionLink("Connect", "Connect", "Subscription", new
                                    {
                                        Id = @subscription.Id,
                                        OrganizationId = @subscription.OrganizationId,
                                        ServicePrincipalObjectId = Model.UserOrganizations[@subscription.OrganizationId].objectIdOfCloudSenseServicePrincipal
                                    },
                                    new { @class = "btn btn-success btn-xs" })
                            }
                        }
                        @if (!Model.UserCanManageAccessForSubscriptions.Contains(@subscription.Id))
                        {
                            <text>(You can't manage access for this subscription.)</text>
                        }
                    </td>
                </tr>
            }
        </table>
        if (Model.DisconnectedUserOrganizations.Count > 0)
        {
            <div class="alert alert-warning" role="alert">
                <h4> Didn't find the Azure subscription that you want to connect? </h4>
                <h5>
                    It could be in the @Model.DisconnectedUserOrganizations.Count other Organization(s) of which you're a member.
                    Click here to connect to all your Organizations (you will need to provide consent for each).
                </h5>
            </div>
        }
    }
</div>